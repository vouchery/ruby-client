=begin
#Vouchery API Reference

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

OpenAPI spec version: 1.0
Contact: hello@vouchery.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.3.4

=end

require 'uri'

module Vouchery
  class PerCustomerRuleApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create the per customer rule
    # @param campaign_id Campaign ID
    # @param [Hash] opts the optional parameters
    # @option opts [PerCustomerRule] :per_customer_rule 
    # @return [PerCustomerRule]
    def create_per_customer_rule(campaign_id, opts = {})
      data, _status_code, _headers = create_per_customer_rule_with_http_info(campaign_id, opts)
      data
    end

    # Create the per customer rule
    # @param campaign_id Campaign ID
    # @param [Hash] opts the optional parameters
    # @option opts [PerCustomerRule] :per_customer_rule 
    # @return [Array<(PerCustomerRule, Fixnum, Hash)>] PerCustomerRule data, response status code and response headers
    def create_per_customer_rule_with_http_info(campaign_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PerCustomerRuleApi.create_per_customer_rule ...'
      end
      # verify the required parameter 'campaign_id' is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        fail ArgumentError, "Missing the required parameter 'campaign_id' when calling PerCustomerRuleApi.create_per_customer_rule"
      end
      # resource path
      local_var_path = '/campaigns/{campaign_id}/per_customer_rule'.sub('{' + 'campaign_id' + '}', campaign_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'per_customer_rule'])
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PerCustomerRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PerCustomerRuleApi#create_per_customer_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete the per customer rule
    # @param campaign_id Campaign ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_per_customer_rule(campaign_id, opts = {})
      delete_per_customer_rule_with_http_info(campaign_id, opts)
      nil
    end

    # Delete the per customer rule
    # @param campaign_id Campaign ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_per_customer_rule_with_http_info(campaign_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PerCustomerRuleApi.delete_per_customer_rule ...'
      end
      # verify the required parameter 'campaign_id' is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        fail ArgumentError, "Missing the required parameter 'campaign_id' when calling PerCustomerRuleApi.delete_per_customer_rule"
      end
      # resource path
      local_var_path = '/campaigns/{campaign_id}/per_customer_rule'.sub('{' + 'campaign_id' + '}', campaign_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PerCustomerRuleApi#delete_per_customer_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get the per customer rule
    # @param campaign_id Campaign ID
    # @param [Hash] opts the optional parameters
    # @return [PerCustomerRule]
    def get_per_customer_rule(campaign_id, opts = {})
      data, _status_code, _headers = get_per_customer_rule_with_http_info(campaign_id, opts)
      data
    end

    # Get the per customer rule
    # @param campaign_id Campaign ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(PerCustomerRule, Fixnum, Hash)>] PerCustomerRule data, response status code and response headers
    def get_per_customer_rule_with_http_info(campaign_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PerCustomerRuleApi.get_per_customer_rule ...'
      end
      # verify the required parameter 'campaign_id' is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        fail ArgumentError, "Missing the required parameter 'campaign_id' when calling PerCustomerRuleApi.get_per_customer_rule"
      end
      # resource path
      local_var_path = '/campaigns/{campaign_id}/per_customer_rule'.sub('{' + 'campaign_id' + '}', campaign_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PerCustomerRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PerCustomerRuleApi#get_per_customer_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update the per customer rule
    # @param campaign_id Campaign ID
    # @param [Hash] opts the optional parameters
    # @option opts [PerCustomerRule] :per_customer_rule 
    # @return [PerCustomerRule]
    def update_per_customer_rule(campaign_id, opts = {})
      data, _status_code, _headers = update_per_customer_rule_with_http_info(campaign_id, opts)
      data
    end

    # Update the per customer rule
    # @param campaign_id Campaign ID
    # @param [Hash] opts the optional parameters
    # @option opts [PerCustomerRule] :per_customer_rule 
    # @return [Array<(PerCustomerRule, Fixnum, Hash)>] PerCustomerRule data, response status code and response headers
    def update_per_customer_rule_with_http_info(campaign_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PerCustomerRuleApi.update_per_customer_rule ...'
      end
      # verify the required parameter 'campaign_id' is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        fail ArgumentError, "Missing the required parameter 'campaign_id' when calling PerCustomerRuleApi.update_per_customer_rule"
      end
      # resource path
      local_var_path = '/campaigns/{campaign_id}/per_customer_rule'.sub('{' + 'campaign_id' + '}', campaign_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'per_customer_rule'])
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PerCustomerRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PerCustomerRuleApi#update_per_customer_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end
end
