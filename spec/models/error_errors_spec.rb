=begin
#Vouchery API Reference

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

OpenAPI spec version: 1.0
Contact: hello@vouchery.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.3.4

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Vouchery::ErrorErrors
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ErrorErrors' do
  before do
    # run before each test
    @instance = Vouchery::ErrorErrors.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ErrorErrors' do
    it 'should create an instance of ErrorErrors' do
      expect(@instance).to be_instance_of(Vouchery::ErrorErrors)
    end
  end
  describe 'test attribute "attribute"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "code"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["required", "below_minimum", "above_maximum", "unexpected_value", "must_be_unique", "should_match_confirmation", "must_be_accepted", "must_be_null", "too_short", "too_long", "wrong_length", "invalid", "invalid_date", "invalid_time", "invalid_datetime", "not_allowed_to_have_vouchers", "already_confirmed", "missing_required_tags", "includes_forbidden_tags", "missing_required_category", "outside_of_permitted_areas", "not_valid_at_this_time", "not_active", "maximum_redemptions_exceeded", "budget_exceeded", "total_budget_exceeded", "yearly_budget_exceeded", "quarterly_budget_exceeded", "monthly_budget_exceeded", "weekly_budget_exceeded", "daily_budget_exceeded", "hourly_budget_exceeded", "new_customer_required", "per_customer_limit_exceeded", "time_limit_expired", "redemptions_limit_exceeded", "below_campaign_minimum", "above_campaign_maximum", "unknown_tags", "does_not_match_assigned_customer", "unique_code_already_used"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.code = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "message"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "boundary_value"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
